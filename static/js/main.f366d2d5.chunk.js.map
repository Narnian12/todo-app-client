{"version":3,"sources":["graphql/params/insertUpdateTodoParams.ts","graphql/queries/todoQueries.ts","graphql/mutations/todoMutations.ts","Authentication/loginButton.tsx","Authentication/logoutButton.tsx","Authentication/authenticationButton.tsx","components/header/Header.tsx","graphql/subscriptions/todoSubscriptions.ts","components/todoList/TodoList.tsx","App.tsx","index.tsx"],"names":["InsertUpdateTodoParams","GET_TODO_LIST","gql","ADD_TODO","Id","Name","Info","DELETE_TODO","SET_EDITING","UPDATE_TODO","LoginButton","loginWithRedirect","useAuth0","Button","variant","onClick","LogoutButton","logout","returnTo","window","location","origin","AuthenticationButton","isAuthenticated","Header","todoList","setTodoList","useState","show","setShow","name","setName","info","setInfo","useMutation","insertTodo","includes","isLocal","clearFields","handleClose","style","display","justifyContent","margin","disabled","onChange","event","map","todo","startsWith","target","value","visible","Modal","onHide","closeButton","Title","Body","className","Footer","preventDefault","newTodo","id","uuid_v4","editing","variables","TODO_CHANGED","TodoList","data","useSubscription","deleteMutation","setEditingMutation","updateTodoMutation","authenticated","setAuthenticated","useEffect","todoChanged","type","addedTodo","filter","length","updatedTodo","checkTodo","deletedTodo","reduce","prev","curr","editingTodo","setEditingTodo","setEditing","editTodo","onNameChange","onInfoChange","updateTodo","elem","Fragment","App","useQuery","loading","error","typedTodoList","getTodoList","console","log","httpLink","createHttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","authLink","setContext","_","headers","process","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","domain","clientId","redirectUri","ApolloProvider","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.f366d2d5.chunk.js","sourcesContent":["export enum InsertUpdateTodoParams {\r\n  Id = 'id',\r\n  Name = 'name',\r\n  Info = 'info'\r\n}","import gql from 'graphql-tag';\r\n\r\nexport const GET_TODO_LIST = gql`\r\n  query GetTodoList {\r\n    getTodoList {\r\n      id\r\n      name\r\n      info\r\n      editing\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\nimport { InsertUpdateTodoParams } from '../params/insertUpdateTodoParams';\r\n\r\nexport const ADD_TODO = gql`\r\n  mutation addTodo(\r\n    $${InsertUpdateTodoParams.Id}: String!,\r\n    $${InsertUpdateTodoParams.Name}: String!,\r\n    $${InsertUpdateTodoParams.Info}: String\r\n  ) {\r\n    addTodo(todo: {\r\n      id: $${InsertUpdateTodoParams.Id},\r\n      name: $${InsertUpdateTodoParams.Name},\r\n      info: $${InsertUpdateTodoParams.Info}\r\n    }) {\r\n      id\r\n      name\r\n      info\r\n      editing\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_TODO = gql`\r\n  mutation deleteTodo($id: String!) {\r\n    deleteTodo(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SET_EDITING = gql`\r\n  mutation setEditing($id: String!, $editing: Boolean!) {\r\n    setEditing(id: $id, editing: $editing) {\r\n      id\r\n      name\r\n      info\r\n      editing\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_TODO = gql`\r\n  mutation updateTodo(\r\n    $${InsertUpdateTodoParams.Id}: String!,\r\n    $${InsertUpdateTodoParams.Name}: String!,\r\n    $${InsertUpdateTodoParams.Info}: String\r\n  ) {\r\n    updateTodo(todo: {\r\n      id: $${InsertUpdateTodoParams.Id},\r\n      name: $${InsertUpdateTodoParams.Name},\r\n      info: $${InsertUpdateTodoParams.Info}\r\n    }) {\r\n      id\r\n      name\r\n      info\r\n      editing\r\n    }\r\n  }\r\n`;","import Button from 'react-bootstrap/Button';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <Button\r\n      variant=\"primary\"\r\n      onClick={loginWithRedirect}\r\n    >\r\n      Log In\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;","import Button from 'react-bootstrap/Button';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <Button\r\n      variant=\"secondary\"\r\n      onClick={() => logout({ returnTo: window.location.origin })}\r\n    >\r\n      Log Out\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import LoginButton from \"./loginButton\";\r\nimport LogoutButton from \"./logoutButton\";\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst AuthenticationButton = () => {\r\n  const { isAuthenticated } = useAuth0();\r\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\r\n};\r\n\r\nexport default AuthenticationButton;","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Todo, TodoStateInterface } from '../../todo-interface';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_TODO } from '../../graphql/mutations/todoMutations';\r\nimport { InsertUpdateTodoParams } from '../../graphql/params/insertUpdateTodoParams';\r\nimport AuthenticationButton from '../../Authentication/authenticationButton';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Header: React.FC<TodoStateInterface> = ({ todoList, setTodoList }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [info, setInfo] = useState('');\r\n  const [insertTodo] = useMutation(ADD_TODO);\r\n  const { isAuthenticated } = useAuth0();\r\n  const [isLocal] = useState(window.location.origin.includes('localhost'));\r\n\r\n  const clearFields = () => {\r\n    setName('');\r\n    setInfo('');\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    clearFields();\r\n  }\r\n  const handleShow = () => setShow(true)\r\n\r\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => setName(event.target.value)\r\n  const onInfoChange = (event: React.ChangeEvent<HTMLInputElement>) => setInfo(event.target.value)\r\n  const onSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setTodoList(todoList.map(todo => todo.name.startsWith(event.target.value) ? { ...todo, visible: true } : { ...todo, visible: false }));\r\n  }\r\n  \r\n  const addTodo = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    let newTodo: Todo = {\r\n      id: uuid_v4(),\r\n      name: name,\r\n      info: info,\r\n      editing: false,\r\n      visible: true\r\n    };\r\n    insertTodo({\r\n      variables: {\r\n        [InsertUpdateTodoParams.Id]: newTodo.id,\r\n        [InsertUpdateTodoParams.Name]: newTodo.name,\r\n        [InsertUpdateTodoParams.Info]: newTodo.info\r\n      }\r\n    });\r\n    clearFields();\r\n    setTodoList([...todoList, newTodo]);\r\n    setShow(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{display: \"flex\", justifyContent: \"space-between\", margin: \"10px 5px\"}}>\r\n        <h1>Todo List</h1>\r\n        <Button variant=\"primary\" onClick={handleShow} disabled={!isAuthenticated && isLocal}>Add Todo</Button>\r\n        <div style={{display: \"flex\", margin: \"10px\"}}>\r\n            <h4>Search</h4>\r\n            <input onChange={onSearchChange}/>\r\n        </div>\r\n        {isLocal ? <AuthenticationButton /> : <></>}\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Todo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form className=\"add\">\r\n            <label style={{margin: \"0px 5px\"}}>Name</label>\r\n            <input value={name} onChange={onNameChange}/>\r\n            <label style={{margin: \"0px 5px\"}}>Info</label>\r\n            <input value={info} onChange={onInfoChange}/>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={addTodo}>\r\n            Add\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Header;","import gql from 'graphql-tag';\r\n\r\nexport const TODO_CHANGED = gql`\r\n  subscription TodoChanged {\r\n    todoChanged {\r\n      type\r\n      data {\r\n        id\r\n        name\r\n        info\r\n        editing\r\n      }\r\n    }\r\n  }\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { Todo, TodoStateInterface } from '../../todo-interface';\r\nimport { useMutation, useSubscription } from '@apollo/client';\r\nimport { DELETE_TODO, SET_EDITING, UPDATE_TODO } from '../../graphql/mutations/todoMutations';\r\nimport { TODO_CHANGED } from '../../graphql/subscriptions/todoSubscriptions';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { PencilSquare, Trash, Check, X } from 'react-bootstrap-icons';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport './TodoList.css';\r\n\r\nconst TodoList: React.FC<TodoStateInterface> = ({ todoList, setTodoList }) => {\r\n  const { data } = useSubscription(TODO_CHANGED);\r\n  const [deleteMutation] = useMutation(DELETE_TODO);\r\n  const [setEditingMutation] = useMutation(SET_EDITING);\r\n  const [updateTodoMutation] = useMutation(UPDATE_TODO);\r\n  const { isAuthenticated } = useAuth0();\r\n  const [authenticated, setAuthenticated] = useState(!window.location.origin.includes('localhost') ? true : isAuthenticated);\r\n\r\n  // Enable multiple clients because subscription will update client if mutation did not manually update local state\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    if (data.todoChanged.type === 'ADD') {\r\n      let addedTodo: Todo = data.todoChanged.data;\r\n      if (todoList.filter(todo => todo.id === addedTodo.id).length === 0) setTodoList([...todoList, addedTodo]);\r\n    }\r\n    else if (data.todoChanged.type === 'UPDATE') {\r\n      let updatedTodo: Todo = data.todoChanged.data;\r\n      let checkTodo = todoList.filter(todo => todo.id === updatedTodo.id)[0];\r\n      if (updatedTodo.name !== checkTodo.name || updatedTodo.info !== checkTodo.info) {\r\n        setTodoList(todoList.map(todo => todo.id === updatedTodo.id ? { id: updatedTodo.id, name: updatedTodo.name, info: updatedTodo.info, editing: false, visible: true } : todo));\r\n      }\r\n    }\r\n    else if (data.todoChanged.type === 'DELETE') {\r\n      let deletedTodo: Todo = data.todoChanged.data;\r\n      if (todoList.filter(todo => todo.id === deletedTodo.id).length === 1) setTodoList(todoList.filter(todo => todo.id !== deletedTodo.id));\r\n    }\r\n  }, [data, todoList, setTodoList]);\r\n\r\n  useEffect(() => {\r\n    setAuthenticated(isAuthenticated)\r\n  }, [isAuthenticated]);\r\n\r\n\r\n  // Find out whether a todo is previously being edited\r\n  const getPreviouslyEditingTodo = () => {\r\n    return todoList.length > 0 ? todoList.reduce((prev, curr) => {\r\n      return prev.editing ? prev : curr.editing ? curr : { id: '', name: '', info: '', editing: false, visible: true };\r\n    }) : { id: \"\", name: \"\", info: \"\", editing: false, visible: true };\r\n  }\r\n  const [editingTodo, setEditingTodo] = useState(getPreviouslyEditingTodo());\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const deleteTodo = (id: string) => {\r\n    deleteMutation({ variables: { id: id }});\r\n    setTodoList(todoList.filter(todo => todo.id !== id));\r\n  }\r\n\r\n  const editTodo = (id: string, editing: boolean) => {\r\n    setEditing(editing);\r\n    setEditingMutation({ variables: { id: id, editing: editing }});\r\n    // Destructure object because we cannot directly change values in the state\r\n    setTodoList(todoList.map(todo => {\r\n      if (todo.id === id) {\r\n        let newTodo = { ...todo, editing: editing };\r\n        setEditingTodo(newTodo);\r\n        return newTodo;\r\n      }\r\n      return todo;\r\n    }));\r\n  }\r\n\r\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => setEditingTodo({ ...editingTodo, name: event.target.value })\r\n  const onInfoChange = (event: React.ChangeEvent<HTMLInputElement>) => setEditingTodo({ ...editingTodo, info: event.target.value })\r\n\r\n  const updateTodo = () => {\r\n    updateTodoMutation({ variables: { id: editingTodo.id, name: editingTodo.name, info: editingTodo.info }});\r\n    setTodoList(todoList.map(todo => todo.id === editingTodo.id ? { id: editingTodo.id, name: editingTodo.name, info: editingTodo.info, editing: false, visible: true } : todo));\r\n    setEditing(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"todoList header\">\r\n        <div>Name</div>\r\n        <div>Info</div>\r\n      </div>\r\n      {todoList.map((elem: Todo) => \r\n        elem.visible ?\r\n        !elem.editing ? (\r\n          <div key={elem.id}>\r\n            <hr/>\r\n            <div className=\"todoList\">\r\n              <div>{elem.name}</div>\r\n              <div>{elem.info}</div>\r\n              <Button variant=\"secondary\" onClick={() => editTodo(elem.id, true)} disabled={editing || !authenticated}><PencilSquare/></Button>\r\n              <Button variant=\"secondary\" onClick={() => deleteTodo(elem.id)} disabled={!authenticated}><Trash/></Button>\r\n            </div>\r\n          </div>\r\n        ) : \r\n        (\r\n          <div key={elem.id}>\r\n            <hr/>\r\n            <div className=\"todoList\">\r\n              <input value={editingTodo.name} onChange={onNameChange}></input>\r\n              <input value={editingTodo.info} onChange={onInfoChange}></input>\r\n              <Button variant=\"secondary\" onClick={() => editTodo(elem.id, false)}><X/></Button>\r\n              <Button variant=\"primary\" onClick={updateTodo}><Check/></Button>\r\n            </div>\r\n          </div>\r\n        )\r\n        : <React.Fragment key={elem.id}></React.Fragment>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_TODO_LIST } from './graphql/queries/todoQueries';\nimport { Todo } from './todo-interface';\n\nimport Header from './components/header/Header';\nimport TodoList from './components/todoList/TodoList';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App: React.FC = () => {\n  const { loading, error, data, } = useQuery(GET_TODO_LIST);\n  let typedTodoList: Todo[] = data ? data.getTodoList : null;\n  const [todoList, setTodoList] = useState(typedTodoList);\n  if (loading) return <p>Loading...</p>\n  if (error) {\n    console.log(error);\n    return <p>Error</p>\n  }\n  // If console log, notice the first iteration returns data as null, so do a single setState\n  if (data && !todoList) {\n      setTodoList(typedTodoList.map(todo => { return { ...todo, visible: true } }));\n  }\n\n  return (\n    <div className=\"App\">\n      <Header todoList={todoList} setTodoList={setTodoList}/>\n      <TodoList todoList={todoList} setTodoList={setTodoList}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { split, ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport App from './App';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n// const httpLink = createHttpLink({ uri: 'https://ps-todo-app-server.herokuapp.com/' });\r\nconst httpLink = createHttpLink({ uri: 'https://todo-app-server-expanded.herokuapp.com/graphql' });\r\nconst wsLink = new WebSocketLink({\r\n  uri: 'wss://todo-app-server-expanded.herokuapp.com/graphql',\r\n  options: {\r\n    reconnect: true\r\n  }\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === 'OperationDefinition' &&\r\n      definition.operation === 'subscription'\r\n    );\r\n  },\r\n  wsLink,\r\n  httpLink\r\n);\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      'Authorization': process.env.REACT_APP_TOKEN\r\n    }\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(splitLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\n// TODO : there is currently an issue with GitHub Pages and setting up Auth0\r\nlet origin = window.location.origin.includes('localhost') ? 'http://localhost:3000/callback' : 'http://narnian12.github.io/todo-app-client/#/callback';\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain='dev-pcwqkxo5.us.auth0.com'\r\n    clientId='A4YoJdfrCasvshDL06K9AfxpIpVif8DC'\r\n    redirectUri={`${origin}`}>\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <Route exact path=\"/\">\r\n          <App />\r\n        </Route>\r\n        <Route path=\"/callback\">\r\n          <App />\r\n        </Route>\r\n      </Router>\r\n    </ApolloProvider>\r\n  </Auth0Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}